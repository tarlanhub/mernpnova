{"ast":null,"code":"import _toConsumableArray from\"/Users/abc/Desktop/bCKUPNEW/mern-login-signup-component-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/abc/Desktop/bCKUPNEW/mern-login-signup-component-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{CCard,CCardHeader,CCardBody,CToast,CToastBody,CToastHeader,CToaster,CForm,CInput,CInputCheckbox,CButton,CContainer,CRow,CCol,CFormGroup,CLabel}from'@coreui/react';import{DocsLink}from'../../../reusable';var Toaster=function Toaster(){var positions=['static','top-left','top-center','top-right','top-full','bottom-left','bottom-center','bottom-right','bottom-full'];var _useState=useState([{position:'static'},{position:'static'},{position:'top-right',autohide:3000}]),_useState2=_slicedToArray(_useState,2),toasts=_useState2[0],setToasts=_useState2[1];var _useState3=useState('top-right'),_useState4=_slicedToArray(_useState3,2),position=_useState4[0],setPosition=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),autohide=_useState6[0],setAutohide=_useState6[1];var _useState7=useState(5000),_useState8=_slicedToArray(_useState7,2),autohideValue=_useState8[0],setAutohideValue=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),closeButton=_useState10[0],setCloseButton=_useState10[1];var _useState11=useState(true),_useState12=_slicedToArray(_useState11,2),fade=_useState12[0],setFade=_useState12[1];var addToast=function addToast(){setToasts([].concat(_toConsumableArray(toasts),[{position:position,autohide:autohide&&autohideValue,closeButton:closeButton,fade:fade}]));};var toasters=function(){return toasts.reduce(function(toasters,toast){toasters[toast.position]=toasters[toast.position]||[];toasters[toast.position].push(toast);return toasters;},{});}();return/*#__PURE__*/React.createElement(CCard,null,/*#__PURE__*/React.createElement(CCardHeader,null,\"Toasts.\",/*#__PURE__*/React.createElement(DocsLink,{name:\"-Toast\"})),/*#__PURE__*/React.createElement(CCardBody,null,/*#__PURE__*/React.createElement(CContainer,null,/*#__PURE__*/React.createElement(CRow,null,/*#__PURE__*/React.createElement(CCol,{sm:\"12\",lg:\"6\"},/*#__PURE__*/React.createElement(CForm,null,/*#__PURE__*/React.createElement(\"h5\",null,\"Add toast with following props:\"),/*#__PURE__*/React.createElement(CFormGroup,{variant:\"custom-checkbox\",className:\"my-2 mt-4\"},/*#__PURE__*/React.createElement(CInputCheckbox,{id:\"autohide\",checked:autohide,onChange:function onChange(e){setAutohide(e.target.checked);},custom:true}),/*#__PURE__*/React.createElement(CLabel,{variant:\"custom-checkbox\",htmlFor:\"autohide\"},\"Autohide of the toast\")),autohide&&/*#__PURE__*/React.createElement(CFormGroup,{className:\"my-2\"},/*#__PURE__*/React.createElement(CLabel,{htmlFor:\"ccyear\"},\"Time to autohide\"),/*#__PURE__*/React.createElement(CInput,{type:\"number\",value:autohideValue,onChange:function onChange(e){setAutohideValue(Number(e.target.value));}})),/*#__PURE__*/React.createElement(CFormGroup,{className:\"my-2\"},/*#__PURE__*/React.createElement(CLabel,{htmlFor:\"ccyear\"},\"Position\"),/*#__PURE__*/React.createElement(\"select\",{className:\"form-control\",value:position,onChange:function onChange(e){setPosition(e.target.value);}},positions.map(function(position,i){return/*#__PURE__*/React.createElement(\"option\",{key:i},position);}))),/*#__PURE__*/React.createElement(CFormGroup,{variant:\"custom-checkbox\",className:\"my-2\"},/*#__PURE__*/React.createElement(CInputCheckbox,{id:\"fade\",checked:fade,onChange:function onChange(e){setFade(e.target.checked);},custom:true}),/*#__PURE__*/React.createElement(CLabel,{variant:\"custom-checkbox\",htmlFor:\"fade\"},\"fade\")),/*#__PURE__*/React.createElement(CFormGroup,{variant:\"custom-checkbox\",className:\"my-2\"},/*#__PURE__*/React.createElement(CInputCheckbox,{id:\"close\",custom:true,checked:closeButton,onChange:function onChange(e){setCloseButton(e.target.checked);}}),/*#__PURE__*/React.createElement(CLabel,{variant:\"custom-checkbox\",htmlFor:\"close\"},\"closeButton\")),/*#__PURE__*/React.createElement(CButton,{className:\"mr-1 w-25\",color:\"success\",onClick:addToast},\"Add toast\"))),/*#__PURE__*/React.createElement(CCol,{sm:\"12\",lg:\"6\"},Object.keys(toasters).map(function(toasterKey){return/*#__PURE__*/React.createElement(CToaster,{position:toasterKey,key:'toaster'+toasterKey},toasters[toasterKey].map(function(toast,key){return/*#__PURE__*/React.createElement(CToast,{key:'toast'+key,show:true,autohide:toast.autohide,fade:toast.fade},/*#__PURE__*/React.createElement(CToastHeader,{closeButton:toast.closeButton},\"Toast title\"),/*#__PURE__*/React.createElement(CToastBody,null,\"This is a toast in \".concat(toasterKey,\" positioned toaster number \").concat(key+1,\".\")));}));}))))));};export default Toaster;","map":{"version":3,"sources":["/Users/abc/Desktop/bCKUPNEW/mern-login-signup-component-master/client/src/components/views/notifications/toaster/Toaster.js"],"names":["React","useState","CCard","CCardHeader","CCardBody","CToast","CToastBody","CToastHeader","CToaster","CForm","CInput","CInputCheckbox","CButton","CContainer","CRow","CCol","CFormGroup","CLabel","DocsLink","Toaster","positions","position","autohide","toasts","setToasts","setPosition","setAutohide","autohideValue","setAutohideValue","closeButton","setCloseButton","fade","setFade","addToast","toasters","reduce","toast","push","e","target","checked","Number","value","map","i","Object","keys","toasterKey","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport {\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CToast,\n  CToastBody,\n  CToastHeader,\n  CToaster,\n  CForm,\n  CInput,\n  CInputCheckbox,\n  CButton,\n  CContainer,\n  CRow,\n  CCol,\n  CFormGroup,\n  CLabel\n} from '@coreui/react'\nimport { DocsLink } from '../../../reusable'\n\nconst Toaster = () => {\n\n  const positions = [\n    'static',\n    'top-left',\n    'top-center',\n    'top-right',\n    'top-full',\n    'bottom-left',\n    'bottom-center',\n    'bottom-right',\n    'bottom-full'\n  ]\n\n  const [toasts, setToasts] = useState([\n    { position: 'static'},\n    { position: 'static'},\n    { position: 'top-right', autohide: 3000 }\n  ])\n\n  const [position, setPosition] = useState('top-right')\n  const [autohide, setAutohide] = useState(true)\n  const [autohideValue, setAutohideValue] = useState(5000)\n  const [closeButton, setCloseButton] = useState(true)\n  const [fade, setFade] = useState(true)\n\n  const addToast = () => {\n    setToasts([\n      ...toasts, \n      { position, autohide: autohide && autohideValue, closeButton, fade }\n    ])\n  }\n\n\n  const toasters = (()=>{\n    return toasts.reduce((toasters, toast) => {\n      toasters[toast.position] = toasters[toast.position] || []\n      toasters[toast.position].push(toast)\n      return toasters\n    }, {})\n  })()\n\n\n  return (\n    <CCard>\n      <CCardHeader>\n        Toasts.\n        <DocsLink name=\"-Toast\"/>\n      </CCardHeader>\n      <CCardBody>\n        <CContainer>\n          <CRow>\n            <CCol sm=\"12\" lg=\"6\">\n              <CForm>\n                <h5>Add toast with following props:</h5>\n\n                <CFormGroup variant=\"custom-checkbox\" className=\"my-2 mt-4\">\n                  <CInputCheckbox\n                    id=\"autohide\"\n                    checked={autohide}\n                    onChange={e => { setAutohide(e.target.checked) }}\n                    custom\n                  />\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"autohide\">\n                    Autohide of the toast\n                  </CLabel>\n                </CFormGroup>\n                {\n                  autohide &&\n                  <CFormGroup className=\"my-2\">\n                    <CLabel htmlFor=\"ccyear\">Time to autohide</CLabel>\n                    <CInput\n                      type=\"number\"\n                      value={autohideValue}\n                      onChange={e => {\n                        setAutohideValue(Number(e.target.value))\n                      }}\n                    />\n                  </CFormGroup>\n                }\n\n                <CFormGroup className=\"my-2\">\n                  <CLabel htmlFor=\"ccyear\">Position</CLabel>\n                  <select\n                    className=\"form-control\"\n                    value={position}\n                    onChange={e => {setPosition(e.target.value)}}\n                  >\n                    {\n                      positions.map((position, i)=>(\n                        <option key={i}>{position}</option>\n                      ))\n                    }\n                  </select>\n                </CFormGroup>\n\n                <CFormGroup variant=\"custom-checkbox\" className=\"my-2\">\n                  <CInputCheckbox\n                    id=\"fade\"\n                    checked={fade}\n                    onChange={e => { setFade(e.target.checked) }}\n                    custom\n                  />\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"fade\">fade</CLabel>\n                </CFormGroup>\n\n                <CFormGroup variant=\"custom-checkbox\" className=\"my-2\">\n                  <CInputCheckbox\n                    id=\"close\"\n                    custom\n                    checked={closeButton}\n                    onChange={e=> { setCloseButton(e.target.checked) }}\n                  />\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"close\">\n                    closeButton\n                  </CLabel>\n                </CFormGroup>\n\n                <CButton\n                  className=\"mr-1 w-25\"\n                  color=\"success\"\n                  onClick={addToast}\n                >\n                  Add toast\n                </CButton>\n\n              </CForm>\n            </CCol>\n            <CCol sm=\"12\" lg=\"6\">\n              {Object.keys(toasters).map((toasterKey) => (\n                <CToaster\n                  position={toasterKey}\n                  key={'toaster' + toasterKey}\n                >\n                  {\n                    toasters[toasterKey].map((toast, key)=>{\n                    return(\n                      <CToast\n                        key={'toast' + key}\n                        show={true}\n                        autohide={toast.autohide}\n                        fade={toast.fade}\n                      >\n                        <CToastHeader closeButton={toast.closeButton}>\n                          Toast title\n                        </CToastHeader>\n                        <CToastBody>\n                          {`This is a toast in ${toasterKey} positioned toaster number ${key + 1}.`}\n                        </CToastBody>\n                      </CToast>\n                    )\n                  })\n                  }\n                </CToaster>\n              ))}\n            </CCol>\n          </CRow>\n        </CContainer>\n      </CCardBody>\n    </CCard>\n  )\n}\n\nexport default Toaster\n"]},"metadata":{},"sourceType":"module"}