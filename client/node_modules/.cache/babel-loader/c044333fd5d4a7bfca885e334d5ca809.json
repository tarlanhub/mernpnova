{"ast":null,"code":"import axios from\"axios\";import{returnStatus}from\"./statusActions\";import{LOGIN_SUCCESS,LOGIN_FAIL,REGISTER_SUCCESS,REGISTER_FAIL,AUTH_SUCCESS,AUTH_FAIL,LOGOUT_SUCCESS,IS_LOADING}from\"./types\";//Uncomment below for local testing\n// axios.defaults.baseURL = \"http://localhost:5000\";\n//uncomment and set url to your own for prod\n//axios.defaults.baseURL = \"https://demos.shawndsilva.com/sessions-auth-app\"\n//Check if user is already logged in\nexport var isAuth=function isAuth(){return function(dispatch){axios.get(\"/api/users/authchecker\",{withCredentials:true}).then(function(res){return dispatch({type:AUTH_SUCCESS,payload:res.data});}).catch(function(err){dispatch({type:AUTH_FAIL});});};};//Register New User\nexport var register=function register(_ref){var name=_ref.name,email=_ref.email,password=_ref.password;return function(dispatch){// Headers\nvar headers={headers:{\"Content-Type\":\"application/json\"}};// Request body\nvar body=JSON.stringify({name:name,email:email,password:password});axios.post(\"/api/users/register\",body,headers).then(function(res){dispatch(returnStatus(res.data,res.status,'REGISTER_SUCCESS'));dispatch({type:IS_LOADING});}).catch(function(err){dispatch(returnStatus(err.response.data,err.response.status,'REGISTER_FAIL'));dispatch({type:REGISTER_FAIL});dispatch({type:IS_LOADING});});};};//Login User\nexport var login=function login(_ref2){var email=_ref2.email,password=_ref2.password;return function(dispatch){// Headers\nvar headers={headers:{\"Content-Type\":\"application/json\"}};// Request body\nvar body=JSON.stringify({email:email,password:password});axios.post(\"/api/users/login\",body,headers).then(function(res){console.log(res);dispatch({type:LOGIN_SUCCESS,payload:res.data});dispatch({type:IS_LOADING});}).catch(function(err){dispatch(returnStatus(err.response.data,err.response.status,'LOGIN_FAIL'));dispatch({type:LOGIN_FAIL});dispatch({type:IS_LOADING});});};};//Logout User and Destroy session\nexport var logout=function logout(){return function(dispatch){axios.delete(\"/api/users/logout\",{withCredentials:true}).then(function(res){return dispatch({type:LOGOUT_SUCCESS});}).catch(function(err){console.log(err);});};};","map":{"version":3,"sources":["/Users/abc/Desktop/bCKUPNEW/mern-login-signup-component-master/client/src/actions/authActions.js"],"names":["axios","returnStatus","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_SUCCESS","REGISTER_FAIL","AUTH_SUCCESS","AUTH_FAIL","LOGOUT_SUCCESS","IS_LOADING","isAuth","dispatch","get","withCredentials","then","res","type","payload","data","catch","err","register","name","email","password","headers","body","JSON","stringify","post","status","response","login","console","log","logout","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { returnStatus } from \"./statusActions\";\n\nimport {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  AUTH_SUCCESS,\n  AUTH_FAIL,\n  LOGOUT_SUCCESS,\n  IS_LOADING,\n} from \"./types\";\n\n//Uncomment below for local testing\n// axios.defaults.baseURL = \"http://localhost:5000\";\n\n//uncomment and set url to your own for prod\n//axios.defaults.baseURL = \"https://demos.shawndsilva.com/sessions-auth-app\"\n\n//Check if user is already logged in\nexport const isAuth = () => (dispatch) => {\n\n    axios\n    .get(\"/api/users/authchecker\",{withCredentials:true})\n    .then((res) =>\n      dispatch({\n        type: AUTH_SUCCESS,\n        payload: res.data\n      })\n    )\n    .catch((err) => {\n      dispatch({\n        type: AUTH_FAIL\n      });\n    });\n\n}\n\n//Register New User\nexport const register = ({ name, email, password }) => (dispatch) => {\n  // Headers\n  const headers = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ name, email, password });\n\n  axios\n    .post(\"/api/users/register\", body, headers)\n    .then((res) =>{\n      dispatch(returnStatus(res.data, res.status, 'REGISTER_SUCCESS'));\n      dispatch({ type: IS_LOADING })\n    })\n    .catch((err) => {\n      dispatch(returnStatus(err.response.data, err.response.status, 'REGISTER_FAIL'))\n      dispatch({\n        type: REGISTER_FAIL\n      });\n      dispatch({ type: IS_LOADING })\n    });\n};\n\n//Login User\nexport const login = ({ email, password }) => (dispatch) => {\n  // Headers\n  const headers = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password });\n\n  axios\n    .post(\"/api/users/login\", body, headers)\n    .then((res) => {\n      console.log(res);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      dispatch({ type: IS_LOADING });\n    }\n    )\n    .catch((err) => {\n      dispatch(returnStatus(err.response.data, err.response.status, 'LOGIN_FAIL'))\n      dispatch({\n        type: LOGIN_FAIL\n      });\n      dispatch({ type: IS_LOADING })\n    });\n};\n\n//Logout User and Destroy session\nexport const logout = () => (dispatch) => {\n\n    axios\n    .delete(\"/api/users/logout\", { withCredentials: true })\n    .then((res) =>\n      dispatch({\n        type: LOGOUT_SUCCESS,\n      })\n    )\n    .catch((err) => {\n      console.log(err);\n    });\n\n}"]},"metadata":{},"sourceType":"module"}