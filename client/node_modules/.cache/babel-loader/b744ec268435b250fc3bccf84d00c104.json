{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Desktop/backup/mern-login-signup-component-master/client/src/components/views/notifications/alerts/Alerts.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CAlert, CButton, CCard, CCardBody, CCardHeader, CCol, CLink, CProgress, CRow } from '@coreui/react';\nimport { DocsLink } from '../../../reusable';\n\nconst Alerts = () => {\n  _s();\n\n  const [visible, setVisible] = React.useState(10);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"Alerts\", /*#__PURE__*/React.createElement(DocsLink, {\n    name: \"CAlert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CAlert, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, \"This is a primary alert \\u2014 check it out!\"), /*#__PURE__*/React.createElement(CAlert, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, \"This is a secondary alert \\u2014 check it out!\"), /*#__PURE__*/React.createElement(CAlert, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, \"This is a success alert \\u2014 check it out!\"), /*#__PURE__*/React.createElement(CAlert, {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, \"This is a danger alert \\u2014 check it out!\"), /*#__PURE__*/React.createElement(CAlert, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, \"This is a warning alert \\u2014 check it out!\"), /*#__PURE__*/React.createElement(CAlert, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, \"This is a info alert \\u2014 check it out!\"), /*#__PURE__*/React.createElement(CAlert, {\n    color: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, \"This is a light alert \\u2014 check it out!\"), /*#__PURE__*/React.createElement(CAlert, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, \"This is a dark alert \\u2014 check it out!\")))), /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Alerts\", /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \" use \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 27\n    }\n  }, \".alert-link\"), \" to provide links\")), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CAlert, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"This is a primary alert with\\xA0\", /*#__PURE__*/React.createElement(CLink, {\n    className: \"alert-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"an example link\"), \". Give it a click if you like.\"), /*#__PURE__*/React.createElement(CAlert, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"This is a secondary alert with\\xA0\", /*#__PURE__*/React.createElement(CLink, {\n    className: \"alert-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"an example link\"), \". Give it a click if you like.\"), /*#__PURE__*/React.createElement(CAlert, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"This is a success alert with\\xA0\", /*#__PURE__*/React.createElement(CLink, {\n    className: \"alert-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"an example link\"), \". Give it a click if you like.\"), /*#__PURE__*/React.createElement(CAlert, {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \"This is a danger alert with\\xA0\", /*#__PURE__*/React.createElement(CLink, {\n    className: \"alert-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"an example link\"), \". Give it a click if you like.\"), /*#__PURE__*/React.createElement(CAlert, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, \"This is a warning alert with\\xA0\", /*#__PURE__*/React.createElement(CLink, {\n    className: \"alert-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"an example link\"), \". Give it a click if you like.\"), /*#__PURE__*/React.createElement(CAlert, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"This is a info alert with\\xA0\", /*#__PURE__*/React.createElement(CLink, {\n    className: \"alert-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"an example link\"), \". Give it a click if you like.\"), /*#__PURE__*/React.createElement(CAlert, {\n    color: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, \"This is a light alert with\\xA0\", /*#__PURE__*/React.createElement(CLink, {\n    className: \"alert-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"an example link\"), \". Give it a click if you like.\"), /*#__PURE__*/React.createElement(CAlert, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"This is a dark alert with\\xA0\", /*#__PURE__*/React.createElement(CLink, {\n    className: \"alert-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"an example link\"), \". Give it a click if you like.\"))))), /*#__PURE__*/React.createElement(CRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Alerts\", /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, \" additional content\")), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CAlert, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"alert-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"Well done!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, \"Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, \"Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\"))))), /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"Alerts\", /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, \" dismissing\")), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CAlert, {\n    color: \"info\",\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, \"I am an dismissible alert!\"), /*#__PURE__*/React.createElement(CAlert, {\n    color: \"warning\",\n    show: visible,\n    closeButton: true,\n    onShowChange: setVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"I will be closed in \", visible, \" seconds!\", /*#__PURE__*/React.createElement(CProgress, {\n    striped: true,\n    color: \"warning\",\n    value: Number(visible) * 10,\n    size: \"xs\",\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(CButton, {\n    color: \"primary\",\n    onClick: () => setVisible(10),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, \"Reset timer\"))))));\n};\n\n_s(Alerts, \"5B8Fi0ChZcrO0171sGQwAUp16LM=\");\n\n_c = Alerts;\nexport default Alerts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alerts\");","map":{"version":3,"sources":["/Users/abc/Desktop/backup/mern-login-signup-component-master/client/src/components/views/notifications/alerts/Alerts.js"],"names":["React","CAlert","CButton","CCard","CCardBody","CCardHeader","CCol","CLink","CProgress","CRow","DocsLink","Alerts","visible","setVisible","useState","Number"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  CAlert,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CLink,\n  CProgress,\n  CRow\n} from '@coreui/react'\nimport { DocsLink } from '../../../reusable'\n\nconst Alerts = () => {\n  const [visible, setVisible] = React.useState(10)\n\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader>\n              Alerts\n              <DocsLink name=\"CAlert\"/>\n            </CCardHeader>\n            <CCardBody>\n              <CAlert color=\"primary\">\n                This is a primary alert — check it out!\n              </CAlert>\n              <CAlert color=\"secondary\">\n                This is a secondary alert — check it out!\n              </CAlert>\n              <CAlert color=\"success\">\n                This is a success alert — check it out!\n              </CAlert>\n              <CAlert color=\"danger\">\n                This is a danger alert — check it out!\n              </CAlert>\n              <CAlert color=\"warning\">\n                This is a warning alert — check it out!\n              </CAlert>\n              <CAlert color=\"info\">\n                This is a info alert — check it out!\n              </CAlert>\n              <CAlert color=\"light\">\n                This is a light alert — check it out!\n              </CAlert>\n              <CAlert color=\"dark\">\n                This is a dark alert — check it out!\n              </CAlert>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader>\n              Alerts\n              <small> use <code>.alert-link</code> to provide links</small>\n            </CCardHeader>\n            <CCardBody>\n              <CAlert color=\"primary\">\n                {/*eslint-disable-next-line*/}\n                This is a primary alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"secondary\">\n                {/*eslint-disable-next-line*/}\n                This is a secondary alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"success\">\n                {/*eslint-disable-next-line*/}\n                This is a success alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"danger\">\n                {/*eslint-disable-next-line*/}\n                This is a danger alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"warning\">\n                {/*eslint-disable-next-line*/}\n                This is a warning alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"info\">\n                {/*eslint-disable-next-line*/}\n                This is a info alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"light\">\n                {/*eslint-disable-next-line*/}\n                This is a light alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"dark\">\n                {/*eslint-disable-next-line*/}\n                This is a dark alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader>\n              Alerts\n              <small> additional content</small>\n            </CCardHeader>\n            <CCardBody>\n              <CAlert color=\"success\">\n                <h4 className=\"alert-heading\">Well done!</h4>\n                <p>\n                  Aww yeah, you successfully read this important alert message. This example text is going\n                  to run a bit longer so that you can see how spacing within an alert works with this kind\n                  of content.\n                </p>\n                <hr />\n                <p className=\"mb-0\">\n                  Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\n                </p>\n              </CAlert>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader>\n              Alerts\n              <small> dismissing</small>\n            </CCardHeader>\n            <CCardBody>\n              <CAlert\n                color=\"info\"\n                closeButton\n              >\n                I am an dismissible alert!\n              </CAlert>\n              <CAlert\n                color=\"warning\"\n                show={visible}\n                closeButton\n                onShowChange={setVisible}\n              >\n                I will be closed in {visible} seconds!\n                <CProgress\n                  striped\n                  color=\"warning\"\n                  value={Number(visible) * 10}\n                  size=\"xs\"\n                  className=\"mb-3\"\n                />\n              </CAlert>\n\n              <CButton color=\"primary\" onClick={() => setVisible(10)}>\n                Reset timer\n              </CButton>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Alerts\n"]},"metadata":{},"sourceType":"module"}