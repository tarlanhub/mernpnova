{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Desktop/backup/mern-login-signup-component-master/client/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Card, CardTitle, CardSubtitle, CardBody, Alert, Spinner } from \"reactstrap\";\nimport { connect } from \"react-redux\"; // API to connect component state to redux store\n\nimport PropTypes from \"prop-types\";\nimport { buttonClicked, isLoading } from \"../actions/uiActions\";\nimport { login } from \"../actions/authActions\";\nimport { Link } from 'react-router-dom';\nimport './style.css';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      msg: \"\"\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      const user = {\n        email,\n        password\n      };\n      this.props.isLoading();\n      this.props.login(user);\n    };\n  }\n\n  componentDidMount() {\n    this.props.buttonClicked();\n  }\n\n  componentDidUpdate(prevProps) {\n    const status = this.props.status;\n\n    if (status !== prevProps.status) {\n      if (status.id === \"LOGIN_FAIL\") {\n        this.setState({\n          msg: status.statusMsg\n        });\n      }\n    }\n  }\n\n  render() {\n    let className = 'divStyle';\n\n    if (!this.props.button) {\n      className = 'formStyle';\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 35\n      }\n    }, \"Login\"))), /*#__PURE__*/React.createElement(CardSubtitle, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \"Don't have an account?\", /*#__PURE__*/React.createElement(Link, {\n      to: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \" Register. \")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }), this.state.msg ? /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, this.state.msg) : null, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, \"E-mail\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      size: \"lg\",\n      placeholder: \"you@youremail.com\",\n      className: \"mb-3\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      size: \"lg\",\n      placeholder: \"Enter your Password\",\n      className: \"mb-3\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      size: \"lg\",\n      color: \"dark\",\n      style: {\n        marginTop: \"2rem\"\n      },\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, this.props.loading ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 24\n      }\n    }, \"Logging in.. \", /*#__PURE__*/React.createElement(Spinner, {\n      size: \"sm\",\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 44\n      }\n    })) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 89\n      }\n    }, \"Login\")))))));\n  }\n\n}\n\nLogin.propTypes = {\n  buttonClicked: PropTypes.func.isRequired,\n  isLoading: PropTypes.func.isRequired,\n  button: PropTypes.bool,\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n  status: PropTypes.object.isRequired,\n  loading: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  //Maps state element in redux store to props\n  //location of element in the state is on the right and key is on the left\n  button: state.ui.button,\n  //store.getState().ui.button another way to get button bool\n  isAuthenticated: state.auth.isAuthenticated,\n  status: state.status,\n  loading: state.ui.loading\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  isLoading,\n  buttonClicked\n})(Login);","map":{"version":3,"sources":["/Users/abc/Desktop/backup/mern-login-signup-component-master/client/src/components/Login.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","Card","CardTitle","CardSubtitle","CardBody","Alert","Spinner","connect","PropTypes","buttonClicked","isLoading","login","Link","Login","state","email","password","msg","onChange","e","setState","target","name","value","onSubmit","preventDefault","user","props","componentDidMount","componentDidUpdate","prevProps","status","id","statusMsg","render","className","button","marginTop","loading","propTypes","func","isRequired","bool","isAuthenticated","object","mapStateToProps","ui","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Card,\n   CardTitle,\n   CardSubtitle,\n  CardBody,\n  Alert,\n  Spinner\n} from \"reactstrap\";\nimport { connect } from \"react-redux\"; // API to connect component state to redux store\nimport PropTypes from \"prop-types\";\nimport { buttonClicked,isLoading } from \"../actions/uiActions\";\nimport { login } from \"../actions/authActions\";\n\nimport { Link } from 'react-router-dom'\nimport './style.css';\n\n\n\nclass Login extends Component {\n\n  state = {\n    email: \"\",\n    password: \"\",\n    msg: \"\"\n  }\n\n  static propTypes = {\n    buttonClicked: PropTypes.func.isRequired,\n    isLoading: PropTypes.func.isRequired,\n    button: PropTypes.bool,\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n    status: PropTypes.object.isRequired,\n    loading: PropTypes.bool\n  };\n\n  componentDidMount() {\n    this.props.buttonClicked();\n}\n\ncomponentDidUpdate(prevProps) {\n      const status = this.props.status;\n\n     if (status !== prevProps.status) {\n\n      if (status.id === \"LOGIN_FAIL\") {\n        this.setState({ msg: status.statusMsg });\n      }\n    }\n};\n\n\nonChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\nonSubmit = (e) => {\n    e.preventDefault();\n\n    const { email, password} = this.state;\n\n    const user = { email, password};\n    this.props.isLoading();\n    this.props.login(user);\n  };\n\n\n  render() {\n\n    let className = 'divStyle';\n    if (!this.props.button) {\n      className = 'formStyle';\n    }\n    return (\n      <div className={className}>\n\n            <Card>\n                <CardBody >\n                  <CardTitle> <h2><strong>Login</strong></h2></CardTitle>\n                <CardSubtitle className=\"text-muted\">Don't have an account?\n                <Link to=\"/register\"> Register. </Link></CardSubtitle>\n                <br/>\n                {this.state.msg ? (\n              <Alert color=\"danger\">{this.state.msg}</Alert>\n            ) : null}\n                  <Form onSubmit={this.onSubmit} >\n                  <FormGroup>\n\n                    <Label for=\"email\">E-mail</Label>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"email\"\n                      size=\"lg\"\n                      placeholder=\"you@youremail.com\"\n                      className=\"mb-3\"\n                      onChange={this.onChange}\n                    />\n\n                    <Label for=\"password\">Password</Label>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"password\"\n                      size=\"lg\"\n                      placeholder=\"Enter your Password\"\n                      className=\"mb-3\"\n                      onChange={this.onChange}\n                    />\n                    <Button size=\"lg\" color=\"dark\" style={{ marginTop: \"2rem\" }} block>\n                       { this.props.loading ?\n                       <span >Logging in.. <Spinner size=\"sm\" color=\"light\" /></span> : <span>Login</span>}\n                    </Button>\n                  </FormGroup>\n                </Form>\n                </CardBody>\n            </Card>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({ //Maps state element in redux store to props\n  //location of element in the state is on the right and key is on the left\n  button: state.ui.button, //store.getState().ui.button another way to get button bool\n  isAuthenticated: state.auth.isAuthenticated,\n  status: state.status,\n  loading: state.ui.loading\n});\n\nexport default connect(mapStateToProps,{ login, isLoading, buttonClicked })(Login);\n"]},"metadata":{},"sourceType":"module"}