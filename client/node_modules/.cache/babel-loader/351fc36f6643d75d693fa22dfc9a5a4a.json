{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Desktop/mern-login-signup-component-master/client/src/components/views/notifications/toaster/Toaster.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CCard, CCardHeader, CCardBody, CToast, CToastBody, CToastHeader, CToaster, CForm, CInput, CInputCheckbox, CButton, CContainer, CRow, CCol, CFormGroup, CLabel } from '@coreui/react';\nimport { DocsLink } from '../../../reusable';\n\nconst Toaster = () => {\n  _s();\n\n  const positions = ['static', 'top-left', 'top-center', 'top-right', 'top-full', 'bottom-left', 'bottom-center', 'bottom-right', 'bottom-full'];\n  const [toasts, setToasts] = useState([{\n    position: 'static'\n  }, {\n    position: 'static'\n  }, {\n    position: 'top-right',\n    autohide: 3000\n  }]);\n  const [position, setPosition] = useState('top-right');\n  const [autohide, setAutohide] = useState(true);\n  const [autohideValue, setAutohideValue] = useState(5000);\n  const [closeButton, setCloseButton] = useState(true);\n  const [fade, setFade] = useState(true);\n\n  const addToast = () => {\n    setToasts([...toasts, {\n      position,\n      autohide: autohide && autohideValue,\n      closeButton,\n      fade\n    }]);\n  };\n\n  const toasters = (() => {\n    return toasts.reduce((toasters, toast) => {\n      toasters[toast.position] = toasters[toast.position] || [];\n      toasters[toast.position].push(toast);\n      return toasters;\n    }, {});\n  })();\n\n  return /*#__PURE__*/React.createElement(CCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Toasts.\", /*#__PURE__*/React.createElement(DocsLink, {\n    name: \"-Toast\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    sm: \"12\",\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Add toast with following props:\"), /*#__PURE__*/React.createElement(CFormGroup, {\n    variant: \"custom-checkbox\",\n    className: \"my-2 mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CInputCheckbox, {\n    id: \"autohide\",\n    checked: autohide,\n    onChange: e => {\n      setAutohide(e.target.checked);\n    },\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(CLabel, {\n    variant: \"custom-checkbox\",\n    htmlFor: \"autohide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }, \"Autohide of the toast\")), autohide && /*#__PURE__*/React.createElement(CFormGroup, {\n    className: \"my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"ccyear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Time to autohide\"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"number\",\n    value: autohideValue,\n    onChange: e => {\n      setAutohideValue(Number(e.target.value));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(CFormGroup, {\n    className: \"my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"ccyear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }, \"Position\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    value: position,\n    onChange: e => {\n      setPosition(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, positions.map((position, i) => /*#__PURE__*/React.createElement(\"option\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, position)))), /*#__PURE__*/React.createElement(CFormGroup, {\n    variant: \"custom-checkbox\",\n    className: \"my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CInputCheckbox, {\n    id: \"fade\",\n    checked: fade,\n    onChange: e => {\n      setFade(e.target.checked);\n    },\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(CLabel, {\n    variant: \"custom-checkbox\",\n    htmlFor: \"fade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }, \"fade\")), /*#__PURE__*/React.createElement(CFormGroup, {\n    variant: \"custom-checkbox\",\n    className: \"my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CInputCheckbox, {\n    id: \"close\",\n    custom: true,\n    checked: closeButton,\n    onChange: e => {\n      setCloseButton(e.target.checked);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(CLabel, {\n    variant: \"custom-checkbox\",\n    htmlFor: \"close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, \"closeButton\")), /*#__PURE__*/React.createElement(CButton, {\n    className: \"mr-1 w-25\",\n    color: \"success\",\n    onClick: addToast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, \"Add toast\"))), /*#__PURE__*/React.createElement(CCol, {\n    sm: \"12\",\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, Object.keys(toasters).map(toasterKey => /*#__PURE__*/React.createElement(CToaster, {\n    position: toasterKey,\n    key: 'toaster' + toasterKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, toasters[toasterKey].map((toast, key) => {\n    return /*#__PURE__*/React.createElement(CToast, {\n      key: 'toast' + key,\n      show: true,\n      autohide: toast.autohide,\n      fade: toast.fade,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(CToastHeader, {\n      closeButton: toast.closeButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }, \"Toast title\"), /*#__PURE__*/React.createElement(CToastBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }, `This is a toast in ${toasterKey} positioned toaster number ${key + 1}.`));\n  }))))))));\n};\n\n_s(Toaster, \"5ZS9JYyoh7T6lE3OC0mQRN5fNck=\");\n\n_c = Toaster;\nexport default Toaster;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toaster\");","map":{"version":3,"sources":["/Users/abc/Desktop/mern-login-signup-component-master/client/src/components/views/notifications/toaster/Toaster.js"],"names":["React","useState","CCard","CCardHeader","CCardBody","CToast","CToastBody","CToastHeader","CToaster","CForm","CInput","CInputCheckbox","CButton","CContainer","CRow","CCol","CFormGroup","CLabel","DocsLink","Toaster","positions","toasts","setToasts","position","autohide","setPosition","setAutohide","autohideValue","setAutohideValue","closeButton","setCloseButton","fade","setFade","addToast","toasters","reduce","toast","push","e","target","checked","Number","value","map","i","Object","keys","toasterKey","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport {\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CToast,\n  CToastBody,\n  CToastHeader,\n  CToaster,\n  CForm,\n  CInput,\n  CInputCheckbox,\n  CButton,\n  CContainer,\n  CRow,\n  CCol,\n  CFormGroup,\n  CLabel\n} from '@coreui/react'\nimport { DocsLink } from '../../../reusable'\n\nconst Toaster = () => {\n\n  const positions = [\n    'static',\n    'top-left',\n    'top-center',\n    'top-right',\n    'top-full',\n    'bottom-left',\n    'bottom-center',\n    'bottom-right',\n    'bottom-full'\n  ]\n\n  const [toasts, setToasts] = useState([\n    { position: 'static'},\n    { position: 'static'},\n    { position: 'top-right', autohide: 3000 }\n  ])\n\n  const [position, setPosition] = useState('top-right')\n  const [autohide, setAutohide] = useState(true)\n  const [autohideValue, setAutohideValue] = useState(5000)\n  const [closeButton, setCloseButton] = useState(true)\n  const [fade, setFade] = useState(true)\n\n  const addToast = () => {\n    setToasts([\n      ...toasts, \n      { position, autohide: autohide && autohideValue, closeButton, fade }\n    ])\n  }\n\n\n  const toasters = (()=>{\n    return toasts.reduce((toasters, toast) => {\n      toasters[toast.position] = toasters[toast.position] || []\n      toasters[toast.position].push(toast)\n      return toasters\n    }, {})\n  })()\n\n\n  return (\n    <CCard>\n      <CCardHeader>\n        Toasts.\n        <DocsLink name=\"-Toast\"/>\n      </CCardHeader>\n      <CCardBody>\n        <CContainer>\n          <CRow>\n            <CCol sm=\"12\" lg=\"6\">\n              <CForm>\n                <h5>Add toast with following props:</h5>\n\n                <CFormGroup variant=\"custom-checkbox\" className=\"my-2 mt-4\">\n                  <CInputCheckbox\n                    id=\"autohide\"\n                    checked={autohide}\n                    onChange={e => { setAutohide(e.target.checked) }}\n                    custom\n                  />\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"autohide\">\n                    Autohide of the toast\n                  </CLabel>\n                </CFormGroup>\n                {\n                  autohide &&\n                  <CFormGroup className=\"my-2\">\n                    <CLabel htmlFor=\"ccyear\">Time to autohide</CLabel>\n                    <CInput\n                      type=\"number\"\n                      value={autohideValue}\n                      onChange={e => {\n                        setAutohideValue(Number(e.target.value))\n                      }}\n                    />\n                  </CFormGroup>\n                }\n\n                <CFormGroup className=\"my-2\">\n                  <CLabel htmlFor=\"ccyear\">Position</CLabel>\n                  <select\n                    className=\"form-control\"\n                    value={position}\n                    onChange={e => {setPosition(e.target.value)}}\n                  >\n                    {\n                      positions.map((position, i)=>(\n                        <option key={i}>{position}</option>\n                      ))\n                    }\n                  </select>\n                </CFormGroup>\n\n                <CFormGroup variant=\"custom-checkbox\" className=\"my-2\">\n                  <CInputCheckbox\n                    id=\"fade\"\n                    checked={fade}\n                    onChange={e => { setFade(e.target.checked) }}\n                    custom\n                  />\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"fade\">fade</CLabel>\n                </CFormGroup>\n\n                <CFormGroup variant=\"custom-checkbox\" className=\"my-2\">\n                  <CInputCheckbox\n                    id=\"close\"\n                    custom\n                    checked={closeButton}\n                    onChange={e=> { setCloseButton(e.target.checked) }}\n                  />\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"close\">\n                    closeButton\n                  </CLabel>\n                </CFormGroup>\n\n                <CButton\n                  className=\"mr-1 w-25\"\n                  color=\"success\"\n                  onClick={addToast}\n                >\n                  Add toast\n                </CButton>\n\n              </CForm>\n            </CCol>\n            <CCol sm=\"12\" lg=\"6\">\n              {Object.keys(toasters).map((toasterKey) => (\n                <CToaster\n                  position={toasterKey}\n                  key={'toaster' + toasterKey}\n                >\n                  {\n                    toasters[toasterKey].map((toast, key)=>{\n                    return(\n                      <CToast\n                        key={'toast' + key}\n                        show={true}\n                        autohide={toast.autohide}\n                        fade={toast.fade}\n                      >\n                        <CToastHeader closeButton={toast.closeButton}>\n                          Toast title\n                        </CToastHeader>\n                        <CToastBody>\n                          {`This is a toast in ${toasterKey} positioned toaster number ${key + 1}.`}\n                        </CToastBody>\n                      </CToast>\n                    )\n                  })\n                  }\n                </CToaster>\n              ))}\n            </CCol>\n          </CRow>\n        </CContainer>\n      </CCardBody>\n    </CCard>\n  )\n}\n\nexport default Toaster\n"]},"metadata":{},"sourceType":"module"}