{"ast":null,"code":"import axios from \"axios\";\nimport { returnStatus } from \"./statusActions\";\nimport { LOGIN_SUCCESS, LOGIN_FAIL, REGISTER_SUCCESS, REGISTER_FAIL, AUTH_SUCCESS, AUTH_FAIL, LOGOUT_SUCCESS, IS_LOADING } from \"./types\"; //Uncomment below for local testing\n// axios.defaults.baseURL = \"http://localhost:5000\";\n//uncomment and set url to your own for prod\n//axios.defaults.baseURL = \"https://demos.shawndsilva.com/sessions-auth-app\"\n//Check if user is already logged in\n\nexport const isAuth = () => dispatch => {\n  axios.get(\"/api/users/authchecker\", {\n    withCredentials: true\n  }).then(res => dispatch({\n    type: AUTH_SUCCESS,\n    payload: res.data\n  })).catch(err => {\n    dispatch({\n      type: AUTH_FAIL\n    });\n  });\n}; //Register New User\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => dispatch => {\n  // Headers\n  const headers = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }; // Request body\n\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n  axios.post(\"/api/users/register\", body, headers).then(res => {\n    dispatch(returnStatus(res.data, res.status, 'REGISTER_SUCCESS'));\n    dispatch({\n      type: IS_LOADING\n    });\n  }).catch(err => {\n    dispatch(returnStatus(err.response.data, err.response.status, 'REGISTER_FAIL'));\n    dispatch({\n      type: REGISTER_FAIL\n    });\n    dispatch({\n      type: IS_LOADING\n    });\n  });\n}; //Login User\n\nexport const login = ({\n  email,\n  password\n}) => dispatch => {\n  // Headers\n  const headers = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }; // Request body\n\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  axios.post(\"/api/users/login\", body, headers).then(res => {\n    console.log(res);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch({\n      type: IS_LOADING\n    });\n  }).catch(err => {\n    dispatch(returnStatus(err.response.data, err.response.status, 'LOGIN_FAIL'));\n    dispatch({\n      type: LOGIN_FAIL\n    });\n    dispatch({\n      type: IS_LOADING\n    });\n  });\n}; //Logout User and Destroy session\n\nexport const logout = () => dispatch => {\n  axios.delete(\"/api/users/logout\", {\n    withCredentials: true\n  }).then(res => dispatch({\n    type: LOGOUT_SUCCESS\n  })).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["/Users/abc/Desktop/mern-login-signup-component-master/client/src/actions/authActions.js"],"names":["axios","returnStatus","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_SUCCESS","REGISTER_FAIL","AUTH_SUCCESS","AUTH_FAIL","LOGOUT_SUCCESS","IS_LOADING","isAuth","dispatch","get","withCredentials","then","res","type","payload","data","catch","err","register","name","email","password","headers","body","JSON","stringify","post","status","response","login","console","log","logout","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { returnStatus } from \"./statusActions\";\n\nimport {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  AUTH_SUCCESS,\n  AUTH_FAIL,\n  LOGOUT_SUCCESS,\n  IS_LOADING,\n} from \"./types\";\n\n//Uncomment below for local testing\n// axios.defaults.baseURL = \"http://localhost:5000\";\n\n//uncomment and set url to your own for prod\n//axios.defaults.baseURL = \"https://demos.shawndsilva.com/sessions-auth-app\"\n\n//Check if user is already logged in\nexport const isAuth = () => (dispatch) => {\n\n    axios\n    .get(\"/api/users/authchecker\",{withCredentials:true})\n    .then((res) =>\n      dispatch({\n        type: AUTH_SUCCESS,\n        payload: res.data\n      })\n    )\n    .catch((err) => {\n      dispatch({\n        type: AUTH_FAIL\n      });\n    });\n\n}\n\n//Register New User\nexport const register = ({ name, email, password }) => (dispatch) => {\n  // Headers\n  const headers = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ name, email, password });\n\n  axios\n    .post(\"/api/users/register\", body, headers)\n    .then((res) =>{\n      dispatch(returnStatus(res.data, res.status, 'REGISTER_SUCCESS'));\n      dispatch({ type: IS_LOADING })\n    })\n    .catch((err) => {\n      dispatch(returnStatus(err.response.data, err.response.status, 'REGISTER_FAIL'))\n      dispatch({\n        type: REGISTER_FAIL\n      });\n      dispatch({ type: IS_LOADING })\n    });\n};\n\n//Login User\nexport const login = ({ email, password }) => (dispatch) => {\n  // Headers\n  const headers = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password });\n\n  axios\n    .post(\"/api/users/login\", body, headers)\n    .then((res) => {\n      console.log(res);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      dispatch({ type: IS_LOADING });\n    }\n    )\n    .catch((err) => {\n      dispatch(returnStatus(err.response.data, err.response.status, 'LOGIN_FAIL'))\n      dispatch({\n        type: LOGIN_FAIL\n      });\n      dispatch({ type: IS_LOADING })\n    });\n};\n\n//Logout User and Destroy session\nexport const logout = () => (dispatch) => {\n\n    axios\n    .delete(\"/api/users/logout\", { withCredentials: true })\n    .then((res) =>\n      dispatch({\n        type: LOGOUT_SUCCESS,\n      })\n    )\n    .catch((err) => {\n      console.log(err);\n    });\n\n}"]},"metadata":{},"sourceType":"module"}