{"ast":null,"code":"import _defineProperty from\"/Users/abc/Desktop/bCKUPNEW/mern-login-signup-component-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/abc/Desktop/bCKUPNEW/mern-login-signup-component-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/abc/Desktop/bCKUPNEW/mern-login-signup-component-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/abc/Desktop/bCKUPNEW/mern-login-signup-component-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/abc/Desktop/bCKUPNEW/mern-login-signup-component-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Button,Form,FormGroup,Label,Input,Card,CardTitle,CardSubtitle,CardBody,Alert,Spinner}from\"reactstrap\";import{connect}from\"react-redux\";// API to connect component state to redux store\nimport{buttonClicked,isLoading}from\"../actions/uiActions\";import{login}from\"../actions/authActions\";import{Link}from'react-router-dom';import'./style.css';var Login=/*#__PURE__*/function(_Component){_inherits(Login,_Component);var _super=_createSuper(Login);function Login(){var _this;_classCallCheck(this,Login);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={email:\"\",password:\"\",msg:\"\"};_this.onChange=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value));};_this.onSubmit=function(e){e.preventDefault();var _this$state=_this.state,email=_this$state.email,password=_this$state.password;var user={email:email,password:password};_this.props.isLoading();_this.props.login(user);};return _this;}_createClass(Login,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.buttonClicked();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var status=this.props.status;if(status!==prevProps.status){if(status.id===\"LOGIN_FAIL\"){this.setState({msg:status.statusMsg});}}}},{key:\"render\",value:function render(){var className='divStyle';if(!this.props.button){className='formStyle';}return/*#__PURE__*/React.createElement(\"div\",{className:className},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(CardTitle,null,\" \",/*#__PURE__*/React.createElement(\"h2\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Login\"))),/*#__PURE__*/React.createElement(CardSubtitle,{className:\"text-muted\"},\"Don't have an account?\",/*#__PURE__*/React.createElement(Link,{to:\"/register\"},\" Register. \")),/*#__PURE__*/React.createElement(\"br\",null),this.state.msg?/*#__PURE__*/React.createElement(Alert,{color:\"danger\"},this.state.msg):null,/*#__PURE__*/React.createElement(Form,{onSubmit:this.onSubmit},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"email\"},\"E-mail\"),/*#__PURE__*/React.createElement(Input,{type:\"email\",name:\"email\",id:\"email\",size:\"lg\",placeholder:\"you@youremail.com\",className:\"mb-3\",onChange:this.onChange}),/*#__PURE__*/React.createElement(Label,{for:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(Input,{type:\"password\",name:\"password\",id:\"password\",size:\"lg\",placeholder:\"Enter your Password\",className:\"mb-3\",onChange:this.onChange}),/*#__PURE__*/React.createElement(Button,{size:\"lg\",color:\"dark\",style:{marginTop:\"2rem\"},block:true},this.props.loading?/*#__PURE__*/React.createElement(\"span\",null,\"Logging in.. \",/*#__PURE__*/React.createElement(Spinner,{size:\"sm\",color:\"light\"})):/*#__PURE__*/React.createElement(\"span\",null,\"Login\")))))));}}]);return Login;}(Component);var mapStateToProps=function mapStateToProps(state){return{//Maps state element in redux store to props\n//location of element in the state is on the right and key is on the left\nbutton:state.ui.button,//store.getState().ui.button another way to get button bool\nisAuthenticated:state.auth.isAuthenticated,status:state.status,loading:state.ui.loading};};export default connect(mapStateToProps,{login:login,isLoading:isLoading,buttonClicked:buttonClicked})(Login);","map":{"version":3,"sources":["/Users/abc/Desktop/bCKUPNEW/mern-login-signup-component-master/client/src/components/Login.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","Card","CardTitle","CardSubtitle","CardBody","Alert","Spinner","connect","buttonClicked","isLoading","login","Link","Login","state","email","password","msg","onChange","e","setState","target","name","value","onSubmit","preventDefault","user","props","prevProps","status","id","statusMsg","className","button","marginTop","loading","mapStateToProps","ui","isAuthenticated","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Card,\n   CardTitle,\n   CardSubtitle,\n  CardBody,\n  Alert,\n  Spinner\n} from \"reactstrap\";\nimport { connect } from \"react-redux\"; // API to connect component state to redux store\nimport PropTypes from \"prop-types\";\nimport { buttonClicked,isLoading } from \"../actions/uiActions\";\nimport { login } from \"../actions/authActions\";\n\nimport { Link } from 'react-router-dom'\nimport './style.css';\n\n\n\nclass Login extends Component {\n\n  state = {\n    email: \"\",\n    password: \"\",\n    msg: \"\"\n  }\n\n  static propTypes = {\n    buttonClicked: PropTypes.func.isRequired,\n    isLoading: PropTypes.func.isRequired,\n    button: PropTypes.bool,\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n    status: PropTypes.object.isRequired,\n    loading: PropTypes.bool\n  };\n\n  componentDidMount() {\n    this.props.buttonClicked();\n}\n\ncomponentDidUpdate(prevProps) {\n      const status = this.props.status;\n\n     if (status !== prevProps.status) {\n\n      if (status.id === \"LOGIN_FAIL\") {\n        this.setState({ msg: status.statusMsg });\n      }\n    }\n};\n\n\nonChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\nonSubmit = (e) => {\n    e.preventDefault();\n\n    const { email, password} = this.state;\n\n    const user = { email, password};\n    this.props.isLoading();\n    this.props.login(user);\n  };\n\n\n  render() {\n\n    let className = 'divStyle';\n    if (!this.props.button) {\n      className = 'formStyle';\n    }\n    return (\n      <div className={className}>\n\n            <Card>\n                <CardBody >\n                  <CardTitle> <h2><strong>Login</strong></h2></CardTitle>\n                <CardSubtitle className=\"text-muted\">Don't have an account?\n                <Link to=\"/register\"> Register. </Link></CardSubtitle>\n                <br/>\n                {this.state.msg ? (\n              <Alert color=\"danger\">{this.state.msg}</Alert>\n            ) : null}\n                  <Form onSubmit={this.onSubmit} >\n                  <FormGroup>\n\n                    <Label for=\"email\">E-mail</Label>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"email\"\n                      size=\"lg\"\n                      placeholder=\"you@youremail.com\"\n                      className=\"mb-3\"\n                      onChange={this.onChange}\n                    />\n\n                    <Label for=\"password\">Password</Label>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"password\"\n                      size=\"lg\"\n                      placeholder=\"Enter your Password\"\n                      className=\"mb-3\"\n                      onChange={this.onChange}\n                    />\n                    <Button size=\"lg\" color=\"dark\" style={{ marginTop: \"2rem\" }} block>\n                       { this.props.loading ?\n                       <span >Logging in.. <Spinner size=\"sm\" color=\"light\" /></span> : <span>Login</span>}\n                    </Button>\n                  </FormGroup>\n                </Form>\n                </CardBody>\n            </Card>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({ //Maps state element in redux store to props\n  //location of element in the state is on the right and key is on the left\n  button: state.ui.button, //store.getState().ui.button another way to get button bool\n  isAuthenticated: state.auth.isAuthenticated,\n  status: state.status,\n  loading: state.ui.loading\n});\n\nexport default connect(mapStateToProps,{ login, isLoading, buttonClicked })(Login);\n"]},"metadata":{},"sourceType":"module"}