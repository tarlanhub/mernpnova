{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Desktop/backup/mern-login-signup-component-master/client/src/components/views/users/Users.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { CBadge, CCard, CCardBody, CCardHeader, CCol, CDataTable, CRow, CPagination } from '@coreui/react';\nimport usersData from './UsersData';\n\nconst getBadge = status => {\n  switch (status) {\n    case 'Active':\n      return 'success';\n\n    case 'Inactive':\n      return 'secondary';\n\n    case 'Pending':\n      return 'warning';\n\n    case 'Banned':\n      return 'danger';\n\n    default:\n      return 'primary';\n  }\n};\n\nconst Users = () => {\n  _s();\n\n  const history = useHistory();\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '');\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1);\n  const [page, setPage] = useState(currentPage);\n\n  const pageChange = newPage => {\n    currentPage !== newPage && history.push(`/users?page=${newPage}`);\n  };\n\n  useEffect(() => {\n    currentPage !== page && setPage(currentPage);\n  }, [currentPage, page]);\n  return /*#__PURE__*/React.createElement(CRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Users\", /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \" example\")), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CDataTable, {\n    items: usersData,\n    fields: [{\n      key: 'name',\n      _classes: 'font-weight-bold'\n    }, 'registered', 'role', 'status'],\n    hover: true,\n    striped: true,\n    itemsPerPage: 5,\n    activePage: page,\n    clickableRows: true,\n    onRowClick: item => history.push(`/users/${item.id}`),\n    scopedSlots: {\n      'status': item => /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(CBadge, {\n        color: getBadge(item.status),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, item.status))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CPagination, {\n    activePage: page,\n    onActivePageChange: pageChange,\n    pages: 5,\n    doubleArrows: false,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })))));\n};\n\n_s(Users, \"0yR2AYwMP3YyQyngiwe6vFZubv0=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/abc/Desktop/backup/mern-login-signup-component-master/client/src/components/views/users/Users.js"],"names":["React","useState","useEffect","useHistory","useLocation","CBadge","CCard","CCardBody","CCardHeader","CCol","CDataTable","CRow","CPagination","usersData","getBadge","status","Users","history","queryPage","search","match","currentPage","Number","page","setPage","pageChange","newPage","push","key","_classes","item","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination\n} from '@coreui/react'\n\nimport usersData from './UsersData'\n\nconst getBadge = status => {\n  switch (status) {\n    case 'Active': return 'success'\n    case 'Inactive': return 'secondary'\n    case 'Pending': return 'warning'\n    case 'Banned': return 'danger'\n    default: return 'primary'\n  }\n}\n\nconst Users = () => {\n  const history = useHistory()\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1)\n  const [page, setPage] = useState(currentPage)\n\n  const pageChange = newPage => {\n    currentPage !== newPage && history.push(`/users?page=${newPage}`)\n  }\n\n  useEffect(() => {\n    currentPage !== page && setPage(currentPage)\n  }, [currentPage, page])\n\n  return (\n    <CRow>\n      <CCol xl={6}>\n        <CCard>\n          <CCardHeader>\n            Users\n            <small className=\"text-muted\"> example</small>\n          </CCardHeader>\n          <CCardBody>\n          <CDataTable\n            items={usersData}\n            fields={[\n              { key: 'name', _classes: 'font-weight-bold' },\n              'registered', 'role', 'status'\n            ]}\n            hover\n            striped\n            itemsPerPage={5}\n            activePage={page}\n            clickableRows\n            onRowClick={(item) => history.push(`/users/${item.id}`)}\n            scopedSlots = {{\n              'status':\n                (item)=>(\n                  <td>\n                    <CBadge color={getBadge(item.status)}>\n                      {item.status}\n                    </CBadge>\n                  </td>\n                )\n            }}\n          />\n          <CPagination\n            activePage={page}\n            onActivePageChange={pageChange}\n            pages={5}\n            doubleArrows={false} \n            align=\"center\"\n          />\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Users\n"]},"metadata":{},"sourceType":"module"}