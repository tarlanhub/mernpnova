{"ast":null,"code":"import _defineProperty from\"/Users/abc/Desktop/bCKUPNEW/mern-login-signup-component-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/abc/Desktop/bCKUPNEW/mern-login-signup-component-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/abc/Desktop/bCKUPNEW/mern-login-signup-component-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/abc/Desktop/bCKUPNEW/mern-login-signup-component-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/abc/Desktop/bCKUPNEW/mern-login-signup-component-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Button,Form,FormGroup,Label,Input,Card,CardTitle,CardSubtitle,CardBody,Alert,Spinner}from\"reactstrap\";import{connect}from\"react-redux\";// API to connect component state to redux store\nimport{buttonClicked,isLoading}from\"../actions/uiActions\";import{Link}from\"react-router-dom\";import{register}from\"../actions/authActions\";import\"./style.css\";var Register=/*#__PURE__*/function(_Component){_inherits(Register,_Component);var _super=_createSuper(Register);function Register(){var _this;_classCallCheck(this,Register);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={name:\"\",email:\"\",password:\"\",msg:\"\"};_this.onChange=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value));};_this.onSubmit=function(e){e.preventDefault();var _this$state=_this.state,name=_this$state.name,email=_this$state.email,password=_this$state.password;var user={name:name,email:email,password:password};_this.props.isLoading();_this.props.register(user);};return _this;}_createClass(Register,[{key:\"componentDidMount\",value:// Removes sign in and register buttons from homepage\n// upon mounting of Register component\nfunction componentDidMount(){this.props.buttonClicked();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var _this2=this;var status=this.props.status;// Changes status message if it is different from previous message\nif(status!==prevProps.status){if(status.id===\"REGISTER_FAIL\"){this.setState({msg:status.statusMsg});}else{this.setState({msg:this.props.status.statusMsg});}}// Redirects to Log In screen after a delay of 2secs if successfully registered\nif(status.id===\"REGISTER_SUCCESS\"){setTimeout(function(){_this2.props.history.push(\"/login\");},2000);}}// Sets the value of the input fields to the state items of the same name\n},{key:\"render\",value:function render(){var className=\"divStyle\";// If HTTP 400 error, render alert with red color, else if\n// it is 200 OK, render alert in green\nvar alert;if(this.state.msg&&this.props.status.respCode>=400){alert=/*#__PURE__*/React.createElement(Alert,{color:\"danger\"},this.state.msg);}else if(this.state.msg&&this.props.status.respCode===200){alert=/*#__PURE__*/React.createElement(Alert,{color:\"success\"},this.state.msg,\" \",/*#__PURE__*/React.createElement(\"br\",null),\" Redirecting to Log In screen\");}if(!this.props.button){className=\"formStyle\";}return/*#__PURE__*/React.createElement(\"div\",{className:className},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(CardTitle,null,/*#__PURE__*/React.createElement(\"h2\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Register\"))),/*#__PURE__*/React.createElement(CardSubtitle,{className:\"text-muted\"},\"Already have an account?\",/*#__PURE__*/React.createElement(Link,{to:\"/login\"},\" Log In. \")),/*#__PURE__*/React.createElement(\"br\",null),alert,/*#__PURE__*/React.createElement(Form,{onSubmit:this.onSubmit},/*#__PURE__*/React.createElement(FormGroup,{className:\"text-center\"},/*#__PURE__*/React.createElement(Label,{for:\"name\"},\"Name\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"name\",id:\"name\",placeholder:\"Enter your name\",className:\"mb-3\",size:\"lg\",onChange:this.onChange}),/*#__PURE__*/React.createElement(Label,{for:\"email\"},\"E-mail\"),/*#__PURE__*/React.createElement(Input,{type:\"email\",name:\"email\",id:\"email\",placeholder:\"you@youremail.com\",className:\"mb-3\",size:\"lg\",onChange:this.onChange}),/*#__PURE__*/React.createElement(Label,{for:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(Input,{type:\"password\",name:\"password\",id:\"password\",placeholder:\"Enter your Password\",className:\"mb-3\",size:\"lg\",onChange:this.onChange}),/*#__PURE__*/React.createElement(Button,{color:\"dark\",className:\"mt-5\",size:\"lg\",block:true},this.props.loading?/*#__PURE__*/React.createElement(\"span\",null,\"Registering.. \",/*#__PURE__*/React.createElement(Spinner,{size:\"sm\",color:\"light\"})):/*#__PURE__*/React.createElement(\"span\",null,\"Register\")))))));}}]);return Register;}(Component);var mapStateToProps=function mapStateToProps(state){return{//Maps state to redux store as props\nbutton:state.ui.button,status:state.status,loading:state.ui.loading};};export default connect(mapStateToProps,{register:register,isLoading:isLoading,buttonClicked:buttonClicked})(Register);","map":{"version":3,"sources":["/Users/abc/Desktop/bCKUPNEW/mern-login-signup-component-master/client/src/components/Register.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","Card","CardTitle","CardSubtitle","CardBody","Alert","Spinner","connect","buttonClicked","isLoading","Link","register","Register","state","name","email","password","msg","onChange","e","setState","target","value","onSubmit","preventDefault","user","props","prevProps","status","id","statusMsg","setTimeout","history","push","className","alert","respCode","button","loading","mapStateToProps","ui"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Card,\n  CardTitle,\n  CardSubtitle,\n  CardBody,\n  Alert,\n  Spinner\n} from \"reactstrap\";\nimport { connect } from \"react-redux\"; // API to connect component state to redux store\nimport PropTypes from \"prop-types\";\nimport { buttonClicked, isLoading } from \"../actions/uiActions\";\nimport { Link } from \"react-router-dom\";\nimport { register } from \"../actions/authActions\";\nimport \"./style.css\";\n\nclass Register extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    msg: \"\"\n  };\n\n  static propTypes = {\n    buttonClicked: PropTypes.func.isRequired,\n    button: PropTypes.bool,\n    register: PropTypes.func.isRequired,\n    status: PropTypes.object.isRequired,\n    loading: PropTypes.bool\n  };\n\n  // Removes sign in and register buttons from homepage\n  // upon mounting of Register component\n  componentDidMount() {\n    this.props.buttonClicked();\n  }\n\n  componentDidUpdate(prevProps) {\n    const status = this.props.status;\n\n    // Changes status message if it is different from previous message\n    if (status !== prevProps.status) {\n      if (status.id === \"REGISTER_FAIL\") {\n        this.setState({ msg: status.statusMsg });\n      } else {\n        this.setState({ msg: this.props.status.statusMsg });\n      }\n    }\n\n    // Redirects to Log In screen after a delay of 2secs if successfully registered\n    if (status.id === \"REGISTER_SUCCESS\") {\n      setTimeout(() => {\n        this.props.history.push(\"/login\");\n      }, 2000);\n    }\n  }\n\n  // Sets the value of the input fields to the state items of the same name\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  // Calls action to register user\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, password } = this.state;\n\n    const user = { name, email, password };\n    this.props.isLoading();\n    this.props.register(user);\n  };\n\n  render() {\n    let className = \"divStyle\";\n\n    // If HTTP 400 error, render alert with red color, else if\n    // it is 200 OK, render alert in green\n    let alert;\n    if (this.state.msg && this.props.status.respCode >= 400) {\n      alert = <Alert color=\"danger\">{this.state.msg}</Alert>;\n    } else if (this.state.msg && this.props.status.respCode === 200) {\n      alert = (\n        <Alert color=\"success\">\n          {this.state.msg} <br /> Redirecting to Log In screen\n        </Alert>\n      );\n    }\n\n    if (!this.props.button) {\n      className = \"formStyle\";\n    }\n    return (\n      <div className={className}>\n        <Card>\n          <CardBody>\n            <CardTitle>\n              <h2>\n                <strong>Register</strong>\n              </h2>\n            </CardTitle>\n            <CardSubtitle className=\"text-muted\">\n              Already have an account?\n              <Link to=\"/login\"> Log In. </Link>\n            </CardSubtitle>\n            <br />\n            {alert}\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup className=\"text-center\">\n                <Label for=\"name\">Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  className=\"mb-3\"\n                  size=\"lg\"\n                  onChange={this.onChange}\n                />\n\n                <Label for=\"email\">E-mail</Label>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  placeholder=\"you@youremail.com\"\n                  className=\"mb-3\"\n                  size=\"lg\"\n                  onChange={this.onChange}\n                />\n\n                <Label for=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"Enter your Password\"\n                  className=\"mb-3\"\n                  size=\"lg\"\n                  onChange={this.onChange}\n                />\n                <Button color=\"dark\" className=\"mt-5\" size=\"lg\" block>\n                { this.props.loading ?\n                       <span >Registering.. <Spinner size=\"sm\" color=\"light\" /></span> : <span>Register</span>}\n                </Button>\n              </FormGroup>\n            </Form>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  //Maps state to redux store as props\n  button: state.ui.button,\n  status: state.status,\n  loading: state.ui.loading\n});\n\nexport default connect(\n  mapStateToProps,\n  { register, isLoading, buttonClicked }\n)(Register);\n"]},"metadata":{},"sourceType":"module"}