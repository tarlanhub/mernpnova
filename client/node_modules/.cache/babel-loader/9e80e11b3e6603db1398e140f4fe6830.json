{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Desktop/mern-login-signup-component-master/client/src/components/views/charts/MainChartExample.js\";\nimport React from 'react';\nimport { CChartLine } from '@coreui/react-chartjs';\nimport { getStyle, hexToRgba } from '@coreui/utils';\nconst brandSuccess = getStyle('success') || '#4dbd74';\nconst brandInfo = getStyle('info') || '#20a8d8';\nconst brandDanger = getStyle('danger') || '#f86c6b';\n\nconst MainChartExample = attributes => {\n  const random = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const defaultDatasets = (() => {\n    let elements = 27;\n    const data1 = [];\n    const data2 = [];\n    const data3 = [];\n\n    for (let i = 0; i <= elements; i++) {\n      data1.push(random(50, 200));\n      data2.push(random(80, 100));\n      data3.push(65);\n    }\n\n    return [{\n      label: 'My First dataset',\n      backgroundColor: hexToRgba(brandInfo, 10),\n      borderColor: brandInfo,\n      pointHoverBackgroundColor: brandInfo,\n      borderWidth: 2,\n      data: data1\n    }, {\n      label: 'My Second dataset',\n      backgroundColor: 'transparent',\n      borderColor: brandSuccess,\n      pointHoverBackgroundColor: brandSuccess,\n      borderWidth: 2,\n      data: data2\n    }, {\n      label: 'My Third dataset',\n      backgroundColor: 'transparent',\n      borderColor: brandDanger,\n      pointHoverBackgroundColor: brandDanger,\n      borderWidth: 1,\n      borderDash: [8, 5],\n      data: data3\n    }];\n  })();\n\n  const defaultOptions = (() => {\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          gridLines: {\n            drawOnChartArea: false\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            maxTicksLimit: 5,\n            stepSize: Math.ceil(250 / 5),\n            max: 250\n          },\n          gridLines: {\n            display: true\n          }\n        }]\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4,\n          hoverBorderWidth: 3\n        }\n      }\n    };\n  })(); // render\n\n\n  return /*#__PURE__*/React.createElement(CChartLine, Object.assign({}, attributes, {\n    datasets: defaultDatasets,\n    options: defaultOptions,\n    labels: ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }));\n};\n\n_c = MainChartExample;\nexport default MainChartExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainChartExample\");","map":{"version":3,"sources":["/Users/abc/Desktop/mern-login-signup-component-master/client/src/components/views/charts/MainChartExample.js"],"names":["React","CChartLine","getStyle","hexToRgba","brandSuccess","brandInfo","brandDanger","MainChartExample","attributes","random","min","max","Math","floor","defaultDatasets","elements","data1","data2","data3","i","push","label","backgroundColor","borderColor","pointHoverBackgroundColor","borderWidth","data","borderDash","defaultOptions","maintainAspectRatio","legend","display","scales","xAxes","gridLines","drawOnChartArea","yAxes","ticks","beginAtZero","maxTicksLimit","stepSize","ceil","point","radius","hitRadius","hoverRadius","hoverBorderWidth"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\n\nconst brandSuccess = getStyle('success') || '#4dbd74'\nconst brandInfo = getStyle('info') || '#20a8d8'\nconst brandDanger = getStyle('danger') || '#f86c6b'\n\nconst MainChartExample = attributes => {\n  const random = (min, max)=>{\n    return Math.floor(Math.random() * (max - min + 1) + min)\n  }\n\n  const defaultDatasets = (()=>{\n    let elements = 27\n    const data1 = []\n    const data2 = []\n    const data3 = []\n    for (let i = 0; i <= elements; i++) {\n      data1.push(random(50, 200))\n      data2.push(random(80, 100))\n      data3.push(65)\n    }\n    return [\n      {\n        label: 'My First dataset',\n        backgroundColor: hexToRgba(brandInfo, 10),\n        borderColor: brandInfo,\n        pointHoverBackgroundColor: brandInfo,\n        borderWidth: 2,\n        data: data1\n      },\n      {\n        label: 'My Second dataset',\n        backgroundColor: 'transparent',\n        borderColor: brandSuccess,\n        pointHoverBackgroundColor: brandSuccess,\n        borderWidth: 2,\n        data: data2\n      },\n      {\n        label: 'My Third dataset',\n        backgroundColor: 'transparent',\n        borderColor: brandDanger,\n        pointHoverBackgroundColor: brandDanger,\n        borderWidth: 1,\n        borderDash: [8, 5],\n        data: data3\n      }\n    ]\n  })()\n\n  const defaultOptions = (()=>{\n    return {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawOnChartArea: false\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              maxTicksLimit: 5,\n              stepSize: Math.ceil(250 / 5),\n              max: 250\n            },\n            gridLines: {\n              display: true\n            }\n          }]\n        },\n        elements: {\n          point: {\n            radius: 0,\n            hitRadius: 10,\n            hoverRadius: 4,\n            hoverBorderWidth: 3\n          }\n        }\n      }\n    }\n  )()\n\n  // render\n  return (\n    <CChartLine\n      {...attributes}\n      datasets={defaultDatasets}\n      options={defaultOptions}\n      labels={['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su']}\n    />\n  )\n}\n\n\nexport default MainChartExample\n"]},"metadata":{},"sourceType":"module"}