{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Desktop/mern-login-signup-component-master/client/src/components/Profile.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Button, Card, CardTitle, CardSubtitle, CardBody } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport './style.css';\nimport { Redirect } from 'react-router-dom';\nimport { logout } from '../actions/authActions';\nimport { buttonReset } from '../actions/uiActions';\nimport App from './App';\nexport class Profile extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onLogout = e => {\n      e.preventDefault();\n      this.props.buttonReset();\n      this.props.logout();\n    };\n  }\n\n  render() {\n    if (!this.props.authState.isAuthenticated) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 14\n        }\n      });\n    }\n\n    const {\n      user\n    } = this.props.authState;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(App, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      size: \"lg\",\n      onClick: this.onLogout,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }\n    }, \"Logout\"));\n  }\n\n}\nProfile.propTypes = {\n  button: PropTypes.bool,\n  authState: PropTypes.object.isRequired,\n  buttonReset: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  //Maps state to redux store as props\n  button: state.ui.button,\n  authState: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logout,\n  buttonReset\n})(Profile);","map":{"version":3,"sources":["/Users/abc/Desktop/mern-login-signup-component-master/client/src/components/Profile.js"],"names":["React","Component","connect","Button","Card","CardTitle","CardSubtitle","CardBody","PropTypes","Redirect","logout","buttonReset","App","Profile","onLogout","e","preventDefault","props","render","authState","isAuthenticated","user","propTypes","button","bool","object","isRequired","func","mapStateToProps","state","ui","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,MADF,EAEEC,IAFF,EAGCC,SAHD,EAIEC,YAJF,EAKEC,QALF,QAMO,YANP;AAOA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,WAAT,QAA2B,sBAA3B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,OAAO,MAAMC,OAAN,SAAsBZ,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAUrCa,QAVqC,GAUzBC,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,KAAL,CAAWN,WAAX;AACA,WAAKM,KAAL,CAAWP,MAAX;AACD,KAdoC;AAAA;;AAgBrCQ,EAAAA,MAAM,GAAG;AAEP,QAAG,CAAC,KAAKD,KAAL,CAAWE,SAAX,CAAqBC,eAAzB,EAA0C;AACxC,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,UAAM;AAACC,MAAAA;AAAD,QAAS,KAAKJ,KAAL,CAAWE,SAA1B;AAEA,wBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOG,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,IAAb;AAAkB,MAAA,OAAO,EAAE,KAAKL,QAAhC;AAA0C,MAAA,KAAK,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPH,CAFF;AAiBD;;AAzCoC;AAA1BD,O,CAEJS,S,GAAY;AACjBC,EAAAA,MAAM,EAAEf,SAAS,CAACgB,IADD;AAEjBL,EAAAA,SAAS,EAAEX,SAAS,CAACiB,MAAV,CAAiBC,UAFX;AAGjBf,EAAAA,WAAW,EAAEH,SAAS,CAACmB,IAAV,CAAeD,UAHX;AAIjBhB,EAAAA,MAAM,EAAEF,SAAS,CAACmB,IAAV,CAAeD;AAJN,C;;AAyCrB,MAAME,eAAe,GAAIC,KAAD,KAAY;AAAE;AACpCN,EAAAA,MAAM,EAAEM,KAAK,CAACC,EAAN,CAASP,MADiB;AAElCJ,EAAAA,SAAS,EAAEU,KAAK,CAACE;AAFiB,CAAZ,CAAxB;;AAKA,eAAe7B,OAAO,CAAC0B,eAAD,EAAkB;AAAElB,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,CAAP,CAAkDE,OAAlD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  Card,\n CardTitle,\n  CardSubtitle,\n  CardBody\n} from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport './style.css';\nimport { Redirect } from 'react-router-dom'\nimport { logout } from '../actions/authActions';\nimport { buttonReset} from '../actions/uiActions';\nimport App from './App';\n\nexport class Profile extends Component {\n\n  static propTypes = {\n    button: PropTypes.bool,\n    authState: PropTypes.object.isRequired,\n    buttonReset: PropTypes.func.isRequired,\n    logout: PropTypes.func.isRequired,\n  };\n\n\n  onLogout = (e) => {\n    e.preventDefault();\n    this.props.buttonReset();\n    this.props.logout();\n  };\n\n  render() {\n\n    if(!this.props.authState.isAuthenticated) {\n      return <Redirect to=\"/\" />\n    }\n\n    const {user} = this.props.authState;\n\n    return (\n      \n      <div >\n        <App/>\n         \n          \n           \n             \n          \n         <Button size=\"lg\" onClick={this.onLogout} color=\"primary\">Logout</Button>\n           \n        \n      \n       </div>\n\n    \n    )\n  }\n}\nconst mapStateToProps = (state) => ({ //Maps state to redux store as props\n  button: state.ui.button,\n  authState: state.auth\n});\n\nexport default connect(mapStateToProps, { logout, buttonReset })(Profile);\n"]},"metadata":{},"sourceType":"module"}